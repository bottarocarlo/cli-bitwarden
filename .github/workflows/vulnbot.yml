name: VulnBot Scan

on:
  schedule:
    - cron: "0 0 * * *" # Run daily at midnight
  workflow_dispatch: # Allow manual triggering
    inputs:
      scanner:
        description: "Scanner to use (trivy or osv)"
        required: false
        default: "trivy"
        type: choice
        options:
          - trivy
          - osv
      severity_threshold:
        description: "CVSS severity threshold (e.g., 7.0 for HIGH and CRITICAL only)"
        required: false
        default: "7.0"
      ai_changelog:
        description: "Generate AI changelog"
        type: boolean
        default: false
      verify_before_pr:
        description: "Verify Go and Cargo configurations before creating PR"
        type: boolean
        default: true
      exclude_dirs:
        description: "Comma-separated list of directories to exclude from scanning"
        required: false
        default: "tests,test,testdata,testadata,examples,example,demo,demos,node_modules,.git"
  push:
    branches: [main] # Run on push to main branch
  pull_request:

jobs:
  scan:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to create branches and commit changes
      pull-requests: write # Needed to create pull requests
      issues: write # Needed if VulnBot creates issues
      security-events: write # If you're generating SARIF or other security outputs
      actions: read # Standard permission

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0 # Fetch all history for all branches and tags

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24"

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Run VulnBot scan
        run: |
          docker run --rm \
            -v "${{ github.workspace }}:/workspace" \
            -e GITHUB_TOKEN="${{ secrets.GITHUB_TOKEN }}" \
            -e VULN_SEVERITY_THRESHOLD="${{ github.event.inputs.severity_threshold || '4.0' }}" \
            -e SCANNER="${{ github.event.inputs.scanner || 'trivy' }}" \
            -e VERIFY_BEFORE_PR="${{ github.event.inputs.verify_before_pr || 'true' }}" \
            -e SCAN_DIR="/workspace" \
            -e EXCLUDE_DIRS="${{ github.event.inputs.exclude_dirs || 'tests,test,testdata,testadata,examples,example,demo,demos,node_modules,.git' }}" \
            ghcr.io/bottarocarlo/vulnbot:main

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: auto-fix vulnerabilities with VulnBot"
          title: "chore: auto-fix vulnerabilities with VulnBot"
          body: |
            This PR includes automated dependency upgrades to fix known vulnerabilities.

            Generated by VulnBot ðŸ¤–
          branch: vulnbot/fix-vulnerabilities
          delete-branch: true
          labels: security, dependencies, automated

      - name: Check for failures
        if: failure()
        run: |
          echo "::error::VulnBot scan failed. Check the logs above for details."
          exit 1
